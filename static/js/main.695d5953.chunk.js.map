{"version":3,"sources":["io/api.js","model/global.js","model/helper.js","model/static.js","App.js","io/abis.js","io/web3_api.js","routes/show.jsx","routes/editor.jsx","routes/search.jsx","routes/home.jsx","routes/register.jsx","routes/avatar.jsx","routes/connect.jsx","index.js"],"names":["getPerson","pubkey","a","url","axios","get","res","data","getPersonByUserName","username","searchPerson","term","SignVoucher","voucher","post","postPerson","person","then","response","console","log","catch","error","sendSMS","mobile","code","sendEmail","email","alert","Person","types","model","did","contract","jobtitle","teaser","img","avatar","tags","ref0","ref1","ref2","metaverse","location","status","gname","sname","metafile","flags","created","pin","magic","actions","self","set","p","length","AppState","searchfield","isConnected","isLoaded","searchResult","chainId","chainTitle","routeky","key","val","me","create","you","appState","store","map","getMe","getSnapshot","getAppState","API","loadMeByPubKey","setAppstate","updateMePerson","onSnapshot","snapshot","dir","TokenIdFromPubkey","pukey","Web3","utils","hexToNumberString","soliditySha3","CreateMetafile","tokenid","image","attr","meta","JSON","stringify","PubkeyFromDid","substr","toLowerCase","DidFromPubkey","MapChainId","chaindId","kmpSearch","text","pattern","lsp","i","j","charAt","push","CONTRACT_ADDRESS_FUJI","VERSION","VERSION_YEAR","FLA_MINTED","App","isDesktop","useMediaQuery","query","useState","setChainId","setChainTitle","addr","setAddr","useClipboard","hasCopied","onCopy","web3","setWeb3","setConnected","navigate","useNavigate","search","useLocation","newTerm","URLSearchParams","goSearch","Global","searchlink","useMoralis","Moralis","isAuthenticating","isAuthenticated","authenticate","authError","logout","login","user","onDisconnect","accounts","onConnect","enableWeb3","_web3","net","window","ethereum","parseInt","Helper","onAccountsChanged","onChainChanged","chain","useEffect","LogonMetaMask","getChainId","chainID","sessionStorage","setItem","logonWalletConnect","provider","mobileLinks","enable","err","logoutAll","blokexplorerAccount","linkSelected","viewSelected","linkShowLInk","style","padding","margin","width","top","position","size","variant","borderSpacing","m","fontSize","borderBottom","paddingBottom","onClick","to","align","isLoading","color","href","isExternal","marginBottom","marginLeft","colspan","STATIC","ABI_YOUFOUNDME","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","require","redeem","moralis","redeemer","eth","Contract","f","methods","send","from","value","Units","ETH","setTokenURI","tokenId","uri","ownerOf","call","Show","lastDid","setLastDid","setTokenid","setPerson","useParams","GLOBAL","PERSON","HELPER","undefined","Object","keys","t","avatarlink","showlink","link","startsWith","substring","boxSize","src","objectFit","alt","disabled","marginTop","colSpan","level","title","fgColor","bgColor","Editor","userLoaded","setUserLoaded","setDid","setPubkey","setContract","setUsername","setJobtitle","setTeaser","setImg","setAvatar","setTags","setRef0","setRef1","setRef2","setLocation","setMetaverse","setStatus","setEmail","setMobile","setGname","setSname","setMetafile","setFlags","setCreated","setMagic","setPin","setCode","codeExpected","setCodeExpected","codeEmail","setCodeEmail","setCodeEmailExpected","statusMessage","setStatusMessage","errorMessage","setErrorMessage","changeImage","setChangeImage","changeAvatar","setChangeAvatar","React","isOpen","setIsOpen","mobilevalerror","setMobilevalerror","mobilevalidate","setMobilevalidate","emailvalidate","setEmailvalidate","mobileok","setMobileok","emailok","setEmailok","showValidateboxEmail","setShowValidateboxEmail","showValidatebox","setShowValidatebox","setSetupDone","useSearchParams","onClose","cancelRef","useRef","validateEmail","validateMobile","old","newFlage","toString","codeexpected","setCheckbox","checked","perm","didCache","e","saveNFT","file","File","base64","btoa","saveIPFS","hash","linkMeta","ipfs","WEB3","owner","rep","handleSave","minPrice","signedVoucher","Date","now","onChange","event","target","files","paddingLeft","paddingRight","placeholder","isChecked","colorScheme","leastDestructiveRef","fontWeight","ref","ml","Search","setSearchResult","setSearchfield","parse","handleChange","startSearch","searchterm","trim","indexOf","people","border","k","d","wdith","Home","Register","isUnique","setIsUnique","isReserved","setIsReserved","nameError","setNameError","nameOk","setNameOk","check","className","cellPadding","isDisabled","Avatar","avataruri","setAvataruri","script","document","createElement","async","body","appendChild","saveAvatar","getElementById","assign","hidden","id","height","class","allow","Connect","message","setMessage","setImage","errormsg","setErrormsg","okmsg","setOkmsg","w","h","theme","extendTheme","config","initialColorMode","rootElement","ROOTURL","render","basename","appId","serverUrl","path","element","index"],"mappings":"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","file":"static/js/main.695d5953.chunk.js","sourcesContent":["/** @format */\n\nimport axios from 'axios';\n\n// https://api.tech41.de/yfm/v0/person/get/0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa\n\nexport async function sendVerifyEmail(email, code) {\n  const POSTEMAIL = 'https://yfm_emailer.tech41.workers.dev/email';\n  axios({\n    method: 'post',\n    url: POSTEMAIL,\n    data: {\n      to: email,\n      code: code,\n      tpl: 'validate',\n    },\n  });\n}\n\nexport async function getPerson(pubkey) {\n  const GETPERSONURL = 'https://api.tech41.de/yfm/v0/person/get/';\n  const url = GETPERSONURL + pubkey;\n  let res = await axios.get(url);\n  return res.data;\n}\n\nexport async function getPersonByUserName(username) {\n  const GETPERSONURL = 'https://api.tech41.de/yfm/v0/person/getuser/';\n  const url = GETPERSONURL + username;\n  let res = await axios.get(url);\n  return res.data;\n}\n\nexport async function searchPerson(term) {\n  const GETPERSONURL = 'https://api.tech41.de/yfm/v0/person/search/';\n  const url = GETPERSONURL + term;\n  let res = await axios.get(url);\n  return res.data;\n}\n\nexport async function SignVoucher(voucher) {\n  const SIGNERURL = 'https://api.tech41.de/yfm/v0/signer';\n\n  let res = await axios.post(SIGNERURL, {\n    voucher: voucher,\n  });\n  return res.data;\n}\n\nexport async function postPerson(person) {\n  const POSTPERSONURL = 'https://api.tech41.de/yfm/v0/person/post/';\n  axios\n    .post(POSTPERSONURL, {\n      person: person,\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nexport async function sendSMS(mobile) {\n  let res = await axios.get(\n    'https://api.tech41.de/yfm/v0/sms/sendsms/' + mobile\n  );\n  return res.data.code;\n}\n\nexport async function sendEmail(email) {\n  alert(email);\n  let res = await axios.get(\n    'https://api.tech41.de/yfm/v0/email/sendemail' + email\n  );\n  alert(res.data.code);\n  return res.data.code;\n}\n","/** @format */\n\nimport { types, getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport * as API from '../io/api.js';\n\nconst Person = types\n  .model({\n    did: '',\n    pubkey: '',\n    contract: '',\n    username: '',\n    jobtitle: '',\n    teaser: '',\n    img: '',\n    avatar: '',\n    tags: '',\n    ref0: '',\n    ref1: '',\n    ref2: '',\n    metaverse: '',\n    location: '',\n    status: '',\n    email: '',\n    mobile: '',\n    gname: '',\n    sname: '',\n    metafile: '',\n    flags: '',\n    created: '',\n    pin: '',\n    magic: '',\n  })\n  .actions((self) => ({\n    set(p) {\n      if (p == null || p.length < 10) {\n        return;\n      }\n      self.did = p.did;\n      self.pubkey = p.pubkey;\n      self.contract = p.contract;\n      self.username = p.username;\n      self.jobtitle = p.jobtitle;\n      self.avatar = p.avatar;\n      self.teaser = p.teaser;\n      self.img = p.img;\n      self.tags = p.tags;\n      self.ref0 = p.ref0;\n      self.ref1 = p.ref1;\n      self.ref2 = p.ref2;\n      self.metaverse = p.metaverse;\n      self.location = p.location;\n      self.status = p.status;\n      self.email = p.email;\n      self.mobile = p.mobile;\n      self.gname = p.gname;\n      self.sname = p.sname;\n      self.metafile = p.metafile;\n      self.flags = p.flags;\n      self.created = p.created;\n      self.magic = p.magic;\n      self.pin = p.pin;\n    },\n  }));\n\nconst AppState = types\n  .model({\n    searchfield: '',\n    did: '',\n    isConnected: false,\n    isLoaded: false,\n    searchResult: '',\n    chainId: 0,\n    chainTitle: 'unknown',\n    routeky: 0,\n  })\n  .actions((self) => ({\n    set(key, val) {\n      switch (key) {\n        case 'routeky':\n          self.routeky = val;\n          break;\n        case 'did':\n          self.did = val;\n          break;\n        case 'searchfield':\n          self.searchfield = val;\n          break;\n\n        case 'isConnected':\n          self.isConnected = val;\n          break;\n\n        case 'isLoaded':\n          self.isLoaded = val;\n          break;\n\n        case 'searchResult':\n          self.searchResult = val;\n          break;\n\n        case 'chainId':\n          self.chainId = val;\n          break;\n\n        case 'chainTitle':\n          self.chainId = val;\n          break;\n      }\n    },\n  }));\n\nconst me = Person.create();\nconst you = Person.create();\nconst appState = AppState.create();\n\nconst RootStore = types.model({\n  me: types.map(Person),\n  you: types.map(Person),\n  appState: types.map(AppState),\n});\n\n// create an instance from a snapshot\nconst store = RootStore.create({});\n\n// listen to new snapshots\nonSnapshot(store, (snapshot) => {\n  console.dir(snapshot);\n});\n\nexport function getMe() {\n  return getSnapshot(me);\n}\n\nexport function getYou() {\n  return getSnapshot(you);\n}\n\nexport function getAppState() {\n  return getSnapshot(appState);\n}\n\nexport async function loadYouByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  you.set(p.person);\n  return p.person;\n}\n\nexport async function loadMeByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  me.set(p.person);\n  return p.person;\n}\n\nexport async function setAppstate(key, val) {\n  appState.set(key, val);\n  return appState;\n}\n\nexport async function updateMePerson(person) {\n  me.set(person);\n  API.postPerson(person);\n  return me;\n}\n\nexport async function UpdateMePersonNoDbSave(person) {\n  me.set(person);\n  return me;\n}\n","/** @format */\nimport Web3 from 'web3';\nimport { getHasher, OutputType, HashType } from 'bigint-hash';\n\n//10196219370672644541601216188660491276260478785220810163497529090616   SHA3_224\n//96932911298637702523298034616076952241110591865517956290731622492456824546905\n// 82751696802861446618287329271326379553441206173434891033707984521910594309783\n// export function TokenIdFromDid(did) {\n//   return (\n//     '' +\n//     getHasher(HashType.SHA3_256)\n//       .update(Buffer.from(did.substr(8)))\n//       .digest(OutputType.BigInt)\n//   );\n// }\n\nexport function TokenIdFromPubkey(pukey) {\n  return Web3.utils.hexToNumberString(Web3.utils.soliditySha3(pukey));\n}\n\nexport function CreateMetafile(\n  did,\n  tokenid,\n  image,\n  avatar,\n  username,\n  jobtitle,\n  teaser\n) {\n  var attr = {};\n  attr['did'] = did;\n  attr['tokenid'] = tokenid;\n  attr['username'] = username;\n  attr['avatar'] = avatar;\n  attr['jobtitle'] = jobtitle;\n  attr['teaser'] = teaser;\n\n  var meta = {};\n  meta['name'] = did;\n  meta['description'] = 'Youfoundme DID, see https://youfoundme.io';\n  meta['image'] = image;\n  meta['external_url'] = 'https://youfoundme.io';\n  meta['attributes'] = attr;\n  return JSON.stringify(meta);\n}\n\nexport function createTextFileDownload(meta, name) {\n  const TextFile = (meta) => {\n    const element = document.createElement('a');\n    const file = new Blob([meta], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n}\n\nexport function PubkeyFromDid(did) {\n  return did.substr(8).toLowerCase();\n}\n\nexport function DidFromPubkey(pubkey) {\n  return 'did:yfm:' + pubkey.toLowerCase();\n}\n\nexport function MapChainId(chaindId) {\n  switch (chaindId) {\n    case 1:\n      return 'Ethereum Mainnet';\n\n    case 43113:\n      return 'Avalance Fuji';\n\n    case 43114:\n      return 'Avalance Main';\n\n    default:\n      return '';\n  }\n}\n\nexport function kmpSearch(text, pattern) {\n  if (pattern.length == 0) return 0; // Immediate match\n\n  // Compute longest suffix-prefix table\n  var lsp = [0]; // Base case\n  for (var i = 1; i < pattern.length; i++) {\n    var j = lsp[i - 1]; // Start by assuming we're extending the previous LSP\n    while (j > 0 && pattern.charAt(i) != pattern.charAt(j)) j = lsp[j - 1];\n    if (pattern.charAt(i) == pattern.charAt(j)) j++;\n    lsp.push(j);\n  }\n\n  // Walk through text string\n  var j = 0; // Number of chars matched in pattern\n  for (var i = 0; i < text.length; i++) {\n    while (j > 0 && text.charAt(i) != pattern.charAt(j)) j = lsp[j - 1]; // Fall back in the pattern\n    if (text.charAt(i) == pattern.charAt(j)) {\n      j++; // Next char matched, increment position\n      if (j == pattern.length) return i - (j - 1);\n    }\n  }\n  return -1; // Not found\n}\n","/** @format */\n\nexport const CONTRACT_ADDRESS_FUJI_nousername =\n  '0x1bF0e88467C48047FB24186DC9C724Ea4bA44aBd';\n\n// https://testnet.snowtrace.io/address/0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b\nexport const CONTRACT_ADDRESS_FUJI =\n  '0xEe171c6302B01fE2b98D255e2D8A6C68282AfF0b';\n\nexport const AVALANCHE_EXPLORER_FUJI = 'https://testnet.snowtrace.io/';\n\nexport const AVALANCHE_FUJI_CHAIN_ID = 43113;\nexport const AVALANCHE_MAIN_CHAIN_ID = 43114;\n\nexport const MORALIS_IPFS = 'https://ipfs.moralis.io:2053/';\nexport const PINATA_IPFS = 'https://gateway.pinata.cloud/ipfs/';\n\nconst NanoAvax = 1;\nconst MicroAvax = 1000 * NanoAvax;\nconst Schmeckle = 49 * MicroAvax + 463 * NanoAvax;\nconst MilliAvax = 1000 * MicroAvax;\nconst Avax = 1000 * MilliAvax;\nconst KiloAvax = 1000 * Avax;\nconst MegaAvax = 1000 * KiloAvax;\n\nexport const DID_PRICE_AVAX = 0.05 * MegaAvax;\n\nfunction convertAvax(amount) {\n  return parseInt(amount * 10 ** 18);\n}\n\nexport const ENV = 'DEV';\nexport const VERSION = '0.0.1' + ' ' + ENV;\nexport const VERSION_YEAR = '2022';\n\n/*NanoAvax uint64 = 1\nMicroAvax uint64 = 1000 * NanoAvax\nSchmeckle uint64 = 49*MicroAvax + 463*NanoAvax\nMilliAvax uint64 = 1000 * MicroAvax\nAvax uint64 = 1000 * MilliAvax\nKiloAvax uint64 = 1000 * Avax\nMegaAvax uint64 = 1000 * KiloAvax\n*/\n\nexport const FLA_EMAILCONFIRMED = 1; // not NFT Meta\nexport const FLA_SMSCONFIRMED = 2; // not NFT Meta\nexport const FLA_FULLTIME = 4; // not NFT Meta\nexport const FLA_PARTTIME = 8; // not NFT Meta\nexport const FLA_CONTRACTS = 16; // not NFT Meta\nexport const FLA_PROJECTS = 32; // not NFT Meta\nexport const FLA_SCHOOL = 64; // Not NFT\nexport const FLA_STUDENT = 128; // Not NFT\nexport const FLA_LOCATION = 256; // Not NFT\nexport const FLA_REFERENCES = 512; // Hide References (Not NFT Meta)\nexport const FLA_CONTACT = 1024; // Disallow request of contact details (Not NFT)\nexport const FLA_ANONYMOUS = 2048; // Anonymous\nexport const FLA_MINTED = 4096; // User has an NFT\nexport const FLA_INVESTOR = 8192; // Investor\n\nexport const FLA_SPARE0 = 16384;\nexport const FLA_SPARE1 = 32768;\nexport const FLA_SPARE2 = 65536;\nexport const FLA_SPARE3 = 131072;\nexport const FLA_SPARE4 = 262144;\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useMoralis } from 'react-moralis';\nimport {\n  Link as LINKCH,\n  HStack,\n  VStack,\n  Button,\n  Text,\n  Heading,\n  useClipboard,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\nimport { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\nimport * as Global from './model/global';\nimport * as Helper from './model/helper';\nimport * as STATIC from './model/static';\n//==========================================================================================\nexport default function App() {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1537px)' });\n  const [chainId, setChainId] = useState(0);\n  const [chainTitle, setChainTitle] = useState('');\n  const [addr, setAddr] = useState('');\n  const [did, setDid] = useState('');\n  const { hasCopied, onCopy } = useClipboard(addr);\n  const [web3, setWeb3] = useState({});\n  const [connected, setConnected] = useState(false);\n\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n\n  const goSearch = async () => {\n    var appState = Global.getAppState();\n    if (newTerm != null && newTerm.length > 0) {\n      Global.setAppstate('searchfield', newTerm);\n    }\n    var searchlink = '/search?term=' + appState.searchfield;\n    navigate(searchlink);\n  };\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  Moralis.onDisconnect(async (accounts) => {\n    Global.setAppstate('isConnected', false);\n    setConnected(false);\n  });\n\n  Moralis.onConnect(async (accounts) => {\n    Moralis.enableWeb3().then((_web3) => {\n      setWeb3(_web3);\n      if (web3.net) {\n        if (window.ethereum) {\n          var chainId = parseInt(window.ethereum.chainId, 16);\n          Global.setAppstate('chainId', chainId);\n          var chainId = parseInt(window.ethereum.chainId, 16);\n          setChainTitle(Helper.MapChainId(chainId));\n        }\n\n        Global.setAppstate('isConnected', true);\n        setConnected(true);\n      }\n    });\n  });\n\n  Moralis.onAccountsChanged(async (accounts) => {\n    if (accounts[0] == null) {\n      return;\n    }\n    Global.loadMeByPubKey(accounts[0]);\n    Global.setAppstate('did', Helper.DidFromPubkey(accounts[0]));\n  });\n\n  Moralis.onChainChanged(async (chain) => {\n    if (window.ethereum) {\n      var chainId = parseInt(window.ethereum.chainId, 16);\n      setChainTitle(Helper.MapChainId(chainId));\n      Global.setAppstate('chainId', chainId);\n    }\n    Global.setAppstate('isConnected', true);\n    setConnected(true);\n  });\n\n  useEffect(() => {});\n\n  const LogonMetaMask = async () => {\n    Moralis.authenticate().then(function (user) {\n      setAddr(user.get('ethAddress'));\n      Global.setAppstate('isConnected', true);\n      setConnected(true);\n\n      Moralis.enableWeb3().then((_web3) => {\n        setWeb3(_web3);\n        if (window.ethereum) {\n          var chainId = parseInt(window.ethereum.chainId, 16);\n          setChainTitle(Helper.MapChainId(chainId));\n        }\n        Moralis.getChainId().then((chainID) => {\n          setChainId(chainId);\n\n          Global.setAppstate('routeky', Global.getAppState().routeky + 1);\n\n          window.sessionStorage.setItem('sessionKey', user.get('ethAddress'));\n\n          navigate('/editor');\n        });\n      });\n    });\n  };\n\n  //https://docs.moralis.io/moralis-server/users/crypto-login\n  const logonWalletConnect = async () => {\n    try {\n      authenticate({\n        provider: 'walletconnect',\n        mobileLinks: [\n          'rainbow',\n          'metamask',\n          'argent',\n          'trust',\n          'imtoken',\n          'pillar',\n        ],\n        chainId: 43113,\n      }).then(function (user) {\n        Moralis.Web3.enable({\n          provider: 'walletconntect',\n          chainId: 43113,\n        }).then(function (web3) {});\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const logoutAll = async () => {\n    setConnected(false);\n    Global.setAppstate('isConnected', false);\n    window.sessionStorage.setItem('sessionKey', '');\n    logout();\n  };\n\n  var blokexplorerAccount = 'https://testnet.snowtrace.io/address/' + addr;\n\n  const linkSelected = () => {\n    var addr = user.get('ethAddress');\n    var did = Helper.DidFromPubkey(addr);\n    var viewlink = '/show/' + did;\n    navigate(viewlink);\n  };\n\n  const viewSelected = () => {\n    if (Global.getAppState().did) {\n      var linkShowLInk = '/show/' + Global.getAppState().did;\n      navigate(linkShowLInk);\n      return;\n    }\n    navigate('/search?term=' + Global.getAppState().searchfield);\n  };\n\n  if (!isDesktop) {\n    return (\n      <div\n        style={{\n          padding: '0',\n          margin: '0',\n          width: '100%',\n          top: '0px',\n          position: 'absolute',\n        }}>\n        <nav>\n          <center>\n            <Table\n              size=\"lg\"\n              variant=\"simple\"\n              style={{\n                borderSpacing: '0px',\n                p: '0',\n                m: '0',\n                width: '100%',\n              }}>\n              <Tr>\n                <Td colspan=\"3\">\n                  <center>\n                    <Heading fontSize=\"3xl\">youfoundme.io</Heading>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td colspan=\"3\" width=\"100%\">\n                  <center>\n                    {!Global.getAppState().isConnected && (\n                      <HStack>\n                        <Button\n                          isLoading={isAuthenticating}\n                          onClick={() => logonWalletConnect()}>\n                          Wallet Connect\n                        </Button>\n                        &nbsp;&nbsp;\n                        <Button\n                          isLoading={isAuthenticating}\n                          onClick={() => LogonMetaMask()}>\n                          Metamask\n                        </Button>\n                      </HStack>\n                    )}\n                    {Global.getAppState().isConnected && (\n                      <VStack>\n                        <HStack>\n                          <Button onClick={() => logoutAll()}>disconnet</Button>\n                          <LINKCH\n                            color=\"blue.500\"\n                            href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                            isExternal>\n                            {Global.getAppState().isConnected && (\n                              <HStack align=\"flex-end\">\n                                <Text fontSize=\"xs\">\n                                  {chainTitle} {chainId}\n                                </Text>\n                              </HStack>\n                            )}\n                          </LINKCH>\n                        </HStack>\n\n                        <HStack>\n                          <LINKCH onClick={() => linkSelected()}>\n                            <Text color=\"blue.500\" fontSize=\"xs\">\n                              me\n                            </Text>\n                          </LINKCH>\n                          <LINKCH href={blokexplorerAccount} isExternal>\n                            <HStack>\n                              <Text fontSize=\"xs\">{addr}</Text>\n                              <ExternalLinkIcon\n                                fontSize=\"xs\"\n                                style={{\n                                  marginBottom: '4px',\n                                  marginLeft: '2px',\n                                }}\n                              />\n                            </HStack>\n                          </LINKCH>\n                        </HStack>\n                      </VStack>\n                    )}\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td width=\"100%\" colspan=\"3\">\n                  <center>\n                    <Button onClick={goSearch}>Find</Button>\n                    &nbsp;&nbsp;\n                    <Button onClick={() => viewSelected()}>View</Button>\n                    &nbsp;&nbsp;\n                    <Link to=\"/editor\">\n                      <Button>Me</Button>\n                    </Link>\n                  </center>\n                </Td>\n              </Tr>\n              <Tr>\n                <Td colspan=\"3\">\n                  <Outlet />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td colspan=\"3\">\n                  <center>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy\n                      - Terms of Service\n                    </Text>\n                    <Text color=\"green.500\" fontSize=\"xs\">\n                      V: {STATIC.VERSION}\n                    </Text>\n                  </center>\n                </Td>\n              </Tr>\n            </Table>\n          </center>\n        </nav>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        padding: '0',\n        margin: '0',\n        width: '100%',\n        top: '0px',\n        position: 'absolute',\n      }}>\n      <nav>\n        <center>\n          <Table\n            size=\"lg\"\n            variant=\"simple\"\n            style={{\n              borderSpacing: '0px',\n              p: '0',\n              m: '0',\n              width: '100%',\n            }}>\n            <Tr>\n              <Td\n                style={{\n                  width: '20px',\n                }}>\n                <Heading fontSize=\"3xl\">youfoundme.io</Heading>\n              </Td>\n              <Td width=\"100%\">\n                <center>\n                  <nav\n                    style={{\n                      width: '100%',\n                      borderBottom: 'solid 0px',\n                      paddingBottom: '1rem',\n                    }}>\n                    <Button onClick={goSearch}>Find</Button>\n                    &nbsp;&nbsp;\n                    <Button onClick={() => viewSelected()}>View</Button>\n                    &nbsp;&nbsp;\n                    <Link to=\"/editor\">\n                      <Button>Me</Button>\n                    </Link>\n                  </nav>\n                </center>\n              </Td>\n              <Td width=\"20px\" align=\"right\">\n                <VStack align=\"flex-end\">\n                  {!Global.getAppState().isConnected && (\n                    <HStack>\n                      <Button\n                        isLoading={isAuthenticating}\n                        onClick={() => logonWalletConnect()}>\n                        Wallet Connect\n                      </Button>\n                      <Button\n                        isLoading={isAuthenticating}\n                        onClick={() => LogonMetaMask()}>\n                        Metamask\n                      </Button>\n                    </HStack>\n                  )}\n                  {Global.getAppState().isConnected && (\n                    <VStack align=\"flex-end\">\n                      <HStack align=\"flex-end\">\n                        <LINKCH\n                          color=\"blue.500\"\n                          href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                          isExternal>\n                          {Global.getAppState().isConnected && (\n                            <HStack align=\"flex-end\">\n                              <Text fontSize=\"xs\">\n                                {chainTitle} {chainId}\n                              </Text>\n                            </HStack>\n                          )}\n                        </LINKCH>\n                        <Button onClick={() => logoutAll()}>disconnet</Button>\n                      </HStack>\n\n                      <HStack align=\"flex-end\">\n                        <LINKCH onClick={() => linkSelected()}>\n                          <Text color=\"blue.500\" fontSize=\"xs\">\n                            me\n                          </Text>\n                        </LINKCH>\n                        <LINKCH href={blokexplorerAccount} isExternal>\n                          <HStack align=\"flex-end\">\n                            <Text fontSize=\"xs\">{addr}</Text>\n                            <ExternalLinkIcon\n                              fontSize=\"xs\"\n                              style={{ marginBottom: '4px', marginLeft: '2px' }}\n                            />\n                          </HStack>\n                        </LINKCH>\n                      </HStack>\n                    </VStack>\n                  )}\n                  ,\n                </VStack>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colspan=\"3\">\n                <Outlet />\n              </Td>\n            </Tr>\n            <Tr>\n              <Td colspan=\"3\">\n                <center>\n                  <Text color=\"green.500\" fontSize=\"xs\">\n                    ©{STATIC.VERSION_YEAR} TECH41 GmbH Berlin - Privacy Policy -\n                    Terms of Service - V: {STATIC.VERSION}\n                  </Text>\n                </center>\n              </Td>\n            </Tr>\n          </Table>\n        </center>\n      </nav>\n    </div>\n  );\n}\n","/** @format */\nexport const ABI_YOUFOUNDME = [\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'minter',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'previousAdminRole',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'newAdminRole',\n        type: 'bytes32',\n      },\n    ],\n    name: 'RoleAdminChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleGranted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleRevoked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'DEFAULT_ADMIN_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MINTER_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'availableToWithdraw',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getChainID',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getRoleAdmin',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'username',\n        type: 'string',\n      },\n    ],\n    name: 'getTokenByUsername',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getUsername',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'grantRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'hasRole',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'redeemer',\n        type: 'address',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'tokenId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'minPrice',\n            type: 'uint256',\n          },\n          {\n            internalType: 'string',\n            name: 'uri',\n            type: 'string',\n          },\n          {\n            internalType: 'string',\n            name: 'username',\n            type: 'string',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct YoufoundmeNFT.NFTVoucher',\n        name: 'voucher',\n        type: 'tuple',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'renounceRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'revokeRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'string',\n        name: 'uri',\n        type: 'string',\n      },\n    ],\n    name: 'setTokenURI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'tokenURI',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","/** @format */\n\nimport { useMoralis } from 'react-moralis';\n\nimport { ABI_YOUFOUNDME } from './abis';\nimport * as STATIC from '../model/static';\n\nconst ethers = require('ethers');\n\n// '0xdE9C2EBbb5d42F094271e21A9F911A9A2F9E0a67'\nexport async function redeem(moralis, redeemer, voucher) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.redeem(redeemer, voucher);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.05') });\n}\n\nexport async function setTokenURI(moralis, redeemer, tokenId, uri) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.setTokenURI(tokenId, uri);\n  return f.send({ from: redeemer, value: moralis.Units.ETH('0.0') });\n}\n\nexport async function tokenURI(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.tokenURI(tokenId);\n  return f.call();\n}\n\nexport async function ownerOf(moralis, tokenId) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.ownerOf(tokenId);\n  return f.call();\n}\n\nexport async function getTokenByUsername(moralis, username) {\n  const web3 = await moralis.enableWeb3();\n  const contract = new web3.eth.Contract(\n    ABI_YOUFOUNDME,\n    STATIC.CONTRACT_ADDRESS_FUJI\n  );\n  const f = contract.methods.getTokenByUsername(username);\n  return f.call();\n}\n","/** @format */\n\nimport React, { useEffect, useState, updateState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport QRCode from 'react-qr-code';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n  SunIcon,\n} from '@chakra-ui/icons';\nimport {\n  HStack,\n  useClipboard,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text,\n  Image,\n  Heading,\n  Container,\n  Link,\n  Button,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  useLatestRef,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\n\nimport * as PERSON from '../model/global';\nimport * as GLOBAL from '../model/global';\nimport * as HELPER from '../model/helper';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\n\n//******************************************************** */\nexport default function Show() {\n  const [lastDid, setLastDid] = useState('');\n  const [tokenid, setTokenid] = useState('');\n  const [person, setPerson] = useState({});\n\n  var { did } = useParams();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n  //0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa   Matd\n  //0x58d22f24cd7fda155f9f7eefe9b32add46388ab9   Turtle\n  //0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc   Cryptophine\n\n  const navigate = useNavigate();\n  const appState = GLOBAL.getAppState();\n\n  useEffect(() => {\n    if (lastDid == null || did != lastDid) {\n      var pkey = HELPER.PubkeyFromDid(did);\n      PERSON.loadYouByPubKey(pkey).then((person) => {\n        if (person === undefined || Object.keys(person).length === 0) {\n          return;\n        }\n        setLastDid(did);\n        setPerson(person);\n        if (person.did === undefined) {\n          return;\n        }\n\n        if (person.did.length > 10) {\n          var t = HELPER.TokenIdFromPubkey(person.pubkey);\n          setTokenid(t);\n        }\n      });\n    }\n  });\n\n  var avatarlink = '/avatar.html?url=' + person.avatar;\n\n  const connect = (link) => {\n    navigate('/connect/' + did);\n  };\n\n  const showlink = (link) => {\n    if (link.startsWith('https')) {\n      link = link.substring(8);\n    }\n    if (link.startsWith('http')) {\n      link = link.substring(7);\n    }\n    if (link.length > 50) {\n      link = link.substring(0, 50) + '...';\n    }\n    return link;\n  };\n\n  const { hasCopied, onCopy } = useClipboard(did);\n\n  if (person === undefined || Object.keys(person).length === 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container width=\"100%\"></Container>\n          <h1>loading...</h1>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container width=\"100%\">\n        <Link onClick={onCopy}>\n          <HStack>\n            <Text fontSize=\"sm\">{person.did}</Text>\n            <CopyIcon />\n          </HStack>\n        </Link>\n        <HStack>\n          {person.metafile.length > 0 && (\n            <Link href={person.metaverse} isExternal>\n              <Text fontSize=\"sm\">Metafile: {showlink(person.metafile)}</Text>\n            </Link>\n          )}\n          {person.metafile.length == 0 && (\n            <Text fontSize=\"sm\">Metafile: NFT not minted</Text>\n          )}\n        </HStack>\n        <br />\n        <Heading>{person.username}</Heading>\n        <br />\n        <HStack>\n          {person.img.length > 0 && (\n            <Image\n              boxSize=\"200px\"\n              src={person.img}\n              objectFit=\"cover\"\n              alt={person.username}\n            />\n          )}\n\n          <VStack>\n            <Box boxSize=\"150px\"></Box>\n            <Button onClick={connect} disabled={!isAuthenticated}>\n              Connect\n            </Button>\n          </VStack>\n        </HStack>\n\n        {person.avatar.length > 0 && (\n          <HStack style={{ marginTop: '5px' }}>\n            <Link color=\"teal.500\" href={avatarlink} isExternal>\n              Show Avatar\n            </Link>\n            <ExternalLinkIcon\n              fontSize=\"xs\"\n              color=\"teal.500\"\n              style={{ marginBottom: '-1px', marginLeft: '2px' }}\n            />{' '}\n          </HStack>\n        )}\n        <br />\n        <Heading>{person.jobtitle}</Heading>\n        <Text fontSize=\"1xl\">{person.teaser}</Text>\n        <br />\n        <Table variant=\"simple\">\n          <Tr>\n            <Td>\n              <Link href={person.ref0} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={person.ref0} isExternal>\n                <Text fontSize=\"1xl\">{showlink(person.ref0)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={person.ref1} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={person.ref1} isExternal>\n                <Text fontSize=\"1xl\">{showlink(person.ref1)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={person.ref2} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={person.ref2} isExternal>\n                <Text fontSize=\"1xl\">{showlink(person.ref2)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={person.location} isExternal>\n                <SunIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={person.location} isExternal>\n                <Text fontSize=\"1xl\">{showlink(person.location)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={person.metaverse} isExternal>\n                <ViewIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={person.metaverse} isExternal>\n                <Text fontSize=\"1xl\">{showlink(person.metaverse)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colSpan=\"2\">\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                + details, only visible to contacts confirmed by you\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <InfoOutlineIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {person.gname} {person.sname}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <EmailIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {person.email}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <PhoneIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {person.mobile}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"teal.500\" fontSize=\"1xl\">\n                {person.tags}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"teal.500\" fontSize=\"1xl\">\n                {person.metafile}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <DownloadIcon color=\"blue.500\" />\n            </Td>\n            <Td color=\"teal.500\">VCF card | VCF card+</Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text color=\"blue.500\" fontSize=\"sm\">\n                QR Link\n              </Text>\n            </Td>\n            <Td>\n              <QRCode\n                level=\"H\"\n                size=\"165\"\n                title=\"Youfoundme DID\"\n                fgColor=\"#FFFFFF\"\n                bgColor=\"#000000\"\n                value={'https://app.youfoundme.io/#/show/' + did}\n              />\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\nimport { createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\n\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\nexport default function Editor() {\n  // Authentication =============================\n\n  const [userLoaded, setUserLoaded] = useState(false);\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [location, setLocation] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [sname, setSname] = useState('');\n  const [blockAddr, setBlockAddr] = useState('');\n  const [tokenURI, setTokenURI] = useState('');\n  const [metafile, setMetafile] = useState('');\n  const [flags, setFlags] = useState(0);\n  const [created, setCreated] = useState('');\n  const [magic, setMagic] = useState('');\n  const [pin, setPin] = useState('');\n  const [code, setCode] = useState('');\n  const [codeExpected, setCodeExpected] = useState('');\n  const [codeEmail, setCodeEmail] = useState('');\n  const [codeEmailExpected, setCodeEmailExpected] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [changeImage, setChangeImage] = useState(false);\n  const [changeAvatar, setChangeAvatar] = useState(false);\n  const [tokenid, setTokenid] = useState('');\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [mobilevalerror, setMobilevalerror] = React.useState('');\n  const [mobilevalidate, setMobilevalidate] = React.useState('Please validate');\n  const [emailvalidate, setEmailvalidate] = React.useState('Please validate');\n  const [mobileok, setMobileok] = React.useState('');\n  const [emailok, setEmailok] = React.useState('');\n  const [showValidateboxEmail, setShowValidateboxEmail] = useState(false);\n  const [showValidatebox, setShowValidatebox] = useState(false);\n  const [setupDone, setSetupDone] = useState(false);\n\n  // Search\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  const onDelete = () => {\n    setIsOpen(false);\n    alert('delete NFT');\n  };\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const validateEmail = async () => {};\n\n  const validateMobile = async () => {\n    if (code != codeExpected) {\n      setMobilevalerror('code not valid');\n      setMobileok('');\n      return;\n    }\n\n    setMobileok('');\n\n    setMobilevalerror('');\n    setShowValidatebox(false);\n\n    var old = parseInt(flags);\n    var newFlage = old | STATIC.FLA_SMSCONFIRMED;\n    var person = getPerson();\n    person.flags = newFlage.toString();\n\n    // Write to Db\n    Global.updateMePerson(person); // TODO Why can't we use handle, wehat resets flag?\n    setFlags(newFlage);\n  };\n\n  const sendSMS = async () => {\n    setShowValidatebox(true);\n    API.sendSMS(mobile).then((codeexpected) => {\n      setCodeExpected(codeexpected);\n      setMobileok('Please check your mobile');\n      setMobilevalidate('');\n    });\n  };\n\n  const sendEmail = async () => {\n    setShowValidateboxEmail(true);\n    API.sendEmail(mobile).then((codeexpected) => {\n      setCodeEmailExpected(codeexpected);\n      setEmailok('Please check your email');\n      setEmailvalidate('');\n    });\n  };\n\n  const setCheckbox = (checked, perm) => {\n    if (checked) {\n      setFlags(flags | perm);\n    } else {\n      setFlags(flags ^ perm);\n    }\n  };\n\n  const flip = () => {\n    setChangeImage(!changeImage);\n  };\n\n  const flip2 = () => {\n    setChangeAvatar(!changeAvatar);\n  };\n\n  const createAvatar = () => {\n    handleSave();\n    navigate('/avatar');\n  };\n\n  const getPerson = () => {\n    var person = {};\n    person.did = did;\n    person.pubkey = pubkey.toLowerCase();\n    person.contract = contract.toLowerCase();\n    person.username = username;\n    person.jobtitle = jobtitle;\n    person.teaser = teaser;\n    person.img = img;\n    person.avatar = avatar;\n    person.tags = tags;\n    person.ref0 = ref0;\n    person.ref1 = ref1;\n    person.ref2 = ref2;\n    person.metaverse = metaverse;\n    person.location = location;\n    person.status = status;\n    person.email = email;\n    person.mobile = mobile;\n    person.gname = gname;\n    person.sname = sname;\n    person.metafile = metafile;\n    person.flags = flags.toString();\n    person.created = created;\n    person.magic = magic;\n    person.pin = pin;\n    return person;\n  };\n\n  const setPerson = (person) => {\n    setDid(person.did);\n    setPubkey(person.pubkey);\n    setContract(person.contract);\n    setUsername(person.username);\n    setJobtitle(person.jobtitle);\n    setTeaser(person.teaser);\n    setImg(person.img);\n    setAvatar(person.avatar);\n    setTags(person.tags);\n    setRef0(person.ref0);\n    setRef1(person.ref1);\n    setRef2(person.ref2);\n    setMetaverse(person.metaverse);\n    setLocation(person.location);\n    setStatus(person.status);\n    setEmail(person.email);\n    setMobile(person.mobile);\n    setGname(person.gname);\n    setSname(person.sname);\n    setMetafile(person.metafile);\n    setFlags(parseInt(person.flags));\n    setCreated(person.created);\n    setMagic(person.magic);\n    setPin(person.pin);\n  };\n\n  // http://localhost:3000/editor?did=did:yfm:0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa&url=https://d1a370nemizbjq.cloudfront.net/9a03fcc1-e9e3-435e-9b91-daca8f135597.glb\n  useEffect(() => {\n    setSetupDone(true);\n\n    if (!Global.getAppState().isConnected) {\n      return;\n    }\n\n    if (user == null) {\n      return;\n    }\n\n    if (userLoaded) {\n      return;\n    }\n\n    var pubkey = user.get('ethAddress').toLowerCase();\n    console.log(pubkey);\n\n    var did = HELPER.DidFromPubkey(pubkey).toLowerCase();\n    var didCache = Global.getMe().did.toLowerCase();\n\n    // set TokenId\n    setTokenid(HELPER.TokenIdFromPubkey(pubkey));\n\n    console.log('new did: ' + did);\n    console.log('cache did: ' + didCache);\n\n    if (did == didCache) {\n      console.log('set Person from Cache');\n      setPerson(Global.getMe());\n      if (did.length == 0) {\n        return;\n      }\n    } else {\n      console.log('load person from Db');\n      Global.setAppstate('did', did);\n      Global.loadMeByPubKey(pubkey)\n        .then((person) => {\n          console.log('loaded from db');\n          console.log(person);\n          if (person.did.length == 0) {\n            console.log('did error from db');\n            return;\n          }\n          setPerson(person);\n          Global.UpdateMePersonNoDbSave(person);\n        })\n        .catch((e) => {\n          console.log('no user in Db');\n          navigate('/register');\n          return;\n        });\n    }\n    setUserLoaded(true);\n  });\n\n  const saveNFT = async () => {\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n    console.log(did);\n    console.log(tokenId);\n    // Create new Metada\n    const meta = HELPER.CreateMetafile(\n      did,\n      tokenId,\n      img,\n      avatar,\n      username,\n      jobtitle,\n      teaser\n    );\n    console.log(meta);\n    var file = new Moralis.File('meta.json', { base64: btoa(meta) });\n    await file.saveIPFS();\n\n    var hash = file.hash();\n    console.log(hash);\n\n    //var linkMeta = STATIC.PINATA_IPFS + hash;\n    var linkMeta = file.ipfs();\n    setMetafile(linkMeta);\n    console.log(linkMeta);\n\n    // the meta file has not changed, no need to update\n    if (tokenURI == linkMeta) {\n      //return; // TODO back in !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n    setTokenURI(linkMeta);\n\n    // Does the NFT exist\n    var tokenId = HELPER.TokenIdFromPubkey(pubkey);\n\n    setStatusMessage('metafile saved ' + tokenId);\n    setErrorMessage('');\n\n    WEB3.ownerOf(Moralis, tokenId)\n      .then((owner) => {\n        if (owner.toLowerCase() == pubkey.toLowerCase()) {\n          //  update NFT\n          WEB3.setTokenURI(Moralis, pubkey, tokenId, linkMeta)\n            .then((rep) => {\n              handleSave();\n\n              // Report\n              setStatusMessage('NFT updated');\n              setErrorMessage('');\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT update failed');\n              // TODO inform user of failure\n            });\n        } else {\n          setStatusMessage('');\n          setErrorMessage('NFT belongs to a different user');\n          return;\n        }\n      })\n      .catch((e) => {\n        if (HELPER.kmpSearch('' + e, 'nonexistent') > 0) {\n          // NFT does nont exist\n          var voucher = {\n            tokenId: tokenId,\n            minPrice: STATIC.DID_PRICE_AVAX,\n            uri: linkMeta,\n            username: username,\n            key: 'KEY_PRIV_DEV0',\n            contract: STATIC.CONTRACT_ADDRESS_FUJI,\n          };\n          API.SignVoucher(voucher)\n            .then((signedVoucher) => {\n              WEB3.redeem(Moralis, user.get('ethAddress'), signedVoucher)\n                .then((rep) => {\n                  console.log(rep);\n\n                  // TODO inform user of success\n                  // Update Db\n                  setCreated(Date.now().toString());\n                  setFlags(flags | STATIC.FLA_MINTED);\n                  handleSave();\n                  setStatusMessage('NFT minted');\n                  setErrorMessage('');\n                })\n                .catch((e) => {\n                  console.log(e);\n                  // TODO inform user of failure\n                  setStatusMessage('');\n                  setErrorMessage('NFT minting failed');\n                });\n            })\n            .catch((e) => {\n              console.log(e);\n              setStatusMessage('');\n              setErrorMessage('NFT minting failed, voucher not signed');\n            });\n        }\n      });\n  };\n\n  const handleSave = async (e) => {\n    var person = getPerson();\n    Global.updateMePerson(person);\n  };\n\n  const onImageDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeImage(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  const onAvatarDrop = (event) => {\n    var data = event.target.files[0];\n    var file = new Moralis.File(data.name, data);\n    file\n      .saveIPFS()\n      .then(() => {\n        var linkMeta = file.ipfs();\n        setImg(linkMeta);\n        setChangeAvatar(false);\n        setStatusMessage('Image Uploaded');\n        setErrorMessage('');\n      })\n      .catch((e) => {\n        setStatusMessage('');\n        setErrorMessage('Image upload failed');\n      });\n  };\n\n  // not sogned in =======================================================================================\n  if (!Global.getAppState().isConnected) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  // Check user exists\n\n  // signed in =======================================================================================\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Me Editor</Heading>\n        <br />\n        <HStack>\n          <Text fontSize=\"xs\">DID: </Text>\n          <Text fontSize=\"xs\">{did}</Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Public key: </Text>\n          <Text fontSize=\"xs\">{pubkey} </Text>\n        </HStack>\n        <HStack>\n          <Text fontSize=\"xs\">Contract: </Text>\n          <Text fontSize=\"xs\">{contract} - Avalanche FUJI</Text>\n        </HStack>\n        <CHAKRALINK href={metafile} isExternal>\n          <HStack>\n            <Text fontSize=\"xs\">Metafile:</Text>\n            <Text fontSize=\"xs\">{metafile}</Text>\n            <ExternalLinkIcon fontSize=\"xs\" color=\"blue.500\" />\n          </HStack>\n        </CHAKRALINK>\n        <HStack>\n          <HStack>\n            <Text fontSize=\"xs\">Token:</Text>\n            <Text fontSize=\"xs\">{tokenid}</Text>\n          </HStack>\n        </HStack>\n        <br />\n        <HStack>\n          {!(flags & STATIC.FLA_MINTED) && (\n            <Button onClick={saveNFT}>Create NFT</Button>\n          )}\n          {flags & STATIC.FLA_MINTED && (\n            <Button onClick={saveNFT}>Update NFT</Button>\n          )}\n          <Text fontSize=\"xs\">\n            Costs: NFT creation: 0.25 AVAX, updates are free\n            <br />+ transaction costs. Writes data to the Blockchain\n          </Text>\n        </HStack>\n        <br />\n        <HStack>\n          <Button onClick={handleSave}>Save</Button>\n          <Text fontSize=\"xs\">\n            Saving to youfoundme Db is free, but does not update on-chain data.\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"green.500\" fontSize=\"xs\">\n            {statusMessage}\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"red.500\" fontSize=\"xs\">\n            {errorMessage}\n          </Text>\n        </HStack>\n        <br />\n        <Heading>{username}</Heading>\n        {img.length > 0 && (\n          <Image boxSize=\"140\" src={img} objectFit=\"cover\" alt={username} />\n        )}\n        <CHAKRALINK color=\"teal.500\" onClick={flip}>\n          Change Image\n        </CHAKRALINK>\n        {changeImage && (\n          <Input type=\"file\" name=\"file\" onChange={onImageDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={img} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{img}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <CHAKRALINK color=\"teal.500\" onClick={flip2}>\n          Upload existing avatar (.glb)\n        </CHAKRALINK>\n        &nbsp;or &nbsp;\n        <CHAKRALINK color=\"teal.500\" onClick={() => createAvatar()}>\n          create new avatar with readyplayer.me\n        </CHAKRALINK>\n        {changeAvatar && (\n          <Input type=\"file\" name=\"file\" onChange={onAvatarDrop} />\n        )}\n        <HStack>\n          <CHAKRALINK href={avatar} isExternal>\n            <HStack>\n              <Text fontSize=\"xs\">{avatar}</Text>\n              <ExternalLinkIcon />\n            </HStack>\n          </CHAKRALINK>\n        </HStack>\n        <br />\n        <Heading>Professional Section</Heading>\n        <Table style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n          <Tr>\n            <Td width=\"20px\">\n              <Text>jobtitle: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"jobtitle\"\n                fontSize=\"1xl\"\n                value={jobtitle}\n                onChange={(e) => setJobtitle(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>teaser: </Text>\n            </Td>\n            <Td>\n              <Textarea\n                placeholder=\"teaser\"\n                fontSize=\"1xl\"\n                value={teaser}\n                onChange={(e) => setTeaser(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>tags: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"tags\"\n                fontSize=\"1xl\"\n                value={tags}\n                onChange={(e) => setTags(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref0: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Your company\"\n                fontSize=\"1xl\"\n                value={ref0}\n                onChange={(e) => setRef0(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref0} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref1: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Linkedin\"\n                fontSize=\"1xl\"\n                value={ref1}\n                onChange={(e) => setRef1(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref1} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>ref2: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"Example: Github\"\n                fontSize=\"1xl\"\n                value={ref2}\n                onChange={(e) => setRef2(e.target.value)}\n              />\n              <CHAKRALINK color=\"teal.500\" href={ref2} fontSize=\"xs\" isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n\n          {/* Location Section */}\n          <Tr>\n            <Td colspan=\"2\">\n              <Heading>Location Status</Heading>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Location: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"location\"\n                fontSize=\"1xl\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={location}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Metaverse: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"metaverse\"\n                fontSize=\"1xl\"\n                value={metaverse}\n                onChange={(e) => setMetaverse(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"teal.500\"\n                href={metaverse}\n                fontSize=\"xs\"\n                isExternal>\n                try\n              </CHAKRALINK>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colspan=\"2\">\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_LOCATION) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_LOCATION)\n                  }\n                />\n                <Text>Hide my location</Text>\n              </HStack>\n            </Td>\n          </Tr>\n\n          {/* Contact Section */}\n          <Tr>\n            <Td colspan=\"2\">\n              <Heading>Contact</Heading>\n              <Text fontSize=\"xs\" color=\"teal.500\">\n                Contact details are not shown in search results. We will contact\n                you by email, if a user likes to connect with you. You decide if\n                you like to share your contact details.\n              </Text>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td width=\"10px\">\n              <Text>Email: </Text>\n            </Td>\n            <Td width=\"100%\">\n              <Input\n                placeholder=\"email\"\n                fontSize=\"1xl\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <CHAKRALINK\n                color=\"red.500\"\n                onClick={sendEmail}\n                fontSize=\"xs\"\n                isExternal>\n                {emailvalidate}\n              </CHAKRALINK>\n              <Text fontSize=\"xs\" color=\"green.500\">\n                {emailok}\n              </Text>\n              {showValidateboxEmail && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={codeEmail}\n                    onChange={(e) => setCodeEmail(e.target.value)}\n                  />\n                  <Button onClick={validateEmail}>validate</Button>\n                </HStack>\n              )}\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Mobile: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"+  mobile\"\n                fontSize=\"1xl\"\n                value={mobile}\n                onChange={(e) => setMobile(e.target.value)}\n              />\n              {!(flags & STATIC.FLA_SMSCONFIRMED) && (\n                <HStack>\n                  <CHAKRALINK\n                    color=\"red.500\"\n                    onClick={sendSMS}\n                    fontSize=\"xs\"\n                    isExternal>\n                    {mobilevalidate}\n                  </CHAKRALINK>\n                  <Text fontSize=\"xs\" color=\"green.500\">\n                    {mobileok}\n                  </Text>\n                </HStack>\n              )}\n              {showValidatebox && (\n                <HStack>\n                  <Input\n                    placeholder=\"6 digit code\"\n                    fontSize=\"1xl\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                  />\n                  <Button onClick={validateMobile}>validate</Button>\n                </HStack>\n              )}\n              <Text fontSize=\"xs\" color=\"red.500\">\n                {mobilevalerror}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Name: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"first name\"\n                fontSize=\"1xl\"\n                value={gname}\n                onChange={(e) => setGname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Text>Surname: </Text>\n            </Td>\n            <Td>\n              <Input\n                placeholder=\"last name\"\n                fontSize=\"1xl\"\n                value={sname}\n                onChange={(e) => setSname(e.target.value)}\n              />\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td colspan=\"2\">\n              {/* Privacy Flags ===================================================================================*/}\n              <Heading>Privacy</Heading>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_FULLTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_FULLTIME)\n                  }\n                />\n                <Text>I am looking for full time employment</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PARTTIME) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PARTTIME)\n                  }\n                />\n                <Text>I am looking for part time jobs</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTRACTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTRACTS)\n                  }\n                />\n                <Text>I am available for contract work</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_PROJECTS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_PROJECTS)\n                  }\n                />\n                <Text>I am open to projects and collaborations</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_INVESTOR) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_INVESTOR)\n                  }\n                />\n                <Text>I am an investor or recruiter</Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_SCHOOL) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_SCHOOL)\n                  }\n                />\n                <Text>I am going to school</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_STUDENT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_STUDENT)\n                  }\n                />\n                <Text>I am a student</Text>\n              </HStack>\n              <br />\n\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_REFERENCES) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_REFERENCES)\n                  }\n                />\n                <Text>Do not show my references in search results</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_CONTACT) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_CONTACT)\n                  }\n                />\n                <Text>Do not request my contact details</Text>\n              </HStack>\n              <HStack>\n                <Checkbox\n                  isChecked={(flags & STATIC.FLA_ANONYMOUS) > 0}\n                  onChange={(e) =>\n                    setCheckbox(e.target.checked, STATIC.FLA_ANONYMOUS)\n                  }\n                />\n                <Text>\n                  Do not show my profile at all, i prefer to be anonymous\n                </Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button onClick={handleSave}>Save</Button>\n                <Text fontSize=\"xs\"></Text>\n              </HStack>\n              <br />\n              <HStack>\n                <Button colorScheme=\"red\" onClick={() => setIsOpen(true)}>\n                  Delete Account\n                </Button>\n\n                <AlertDialog\n                  isOpen={isOpen}\n                  leastDestructiveRef={cancelRef}\n                  onClose={onClose}>\n                  <AlertDialogOverlay>\n                    <AlertDialogContent>\n                      <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                        Delete my NFT\n                      </AlertDialogHeader>\n\n                      <AlertDialogBody>\n                        Are you sure? You can't undo this action afterwards.\n                      </AlertDialogBody>\n\n                      <AlertDialogFooter>\n                        <Button ref={cancelRef} onClick={onClose}>\n                          Cancel\n                        </Button>\n                        <Button colorScheme=\"red\" onClick={onDelete} ml={3}>\n                          Delete\n                        </Button>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialogOverlay>\n                </AlertDialog>\n                <Text color=\"red.500\" fontSize=\"xs\">\n                  This cannot be undone, your NFT will be inaccessible.\n                  <br />\n                  Use a different wallet account if you like to re-register.\n                </Text>\n              </HStack>\n            </Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n\nimport {\n  Heading,\n  Image,\n  Input,\n  Container,\n  Text,\n  Button,\n  HStack,\n  Link,\n  Table,\n  Tr,\n  Td,\n  Img,\n  Header,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { getAppState, loadPersonByPubKey, setAppstate } from '../model/global';\nimport { searchPerson, getPerson } from '../io/api';\nimport * as Global from '../model/global';\nimport * as Helper from '../model/helper';\n\nconst Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n\n  const search = useLocation().search;\n  const newTerm = new URLSearchParams(search).get('term');\n\n  useEffect(() => {\n    var appState = Global.getAppState();\n    if (appState.searchfield != '') {\n      setSearchfield(appState.searchfield);\n    }\n\n    if (searchResult.length == '' && appState.searchResult.length > 0) {\n      setSearchResult(JSON.parse(appState.searchResult));\n    }\n  });\n\n  const handleChange = (e) => {\n    var search = e.target.value;\n    setSearchfield(search);\n    Global.setAppstate('searchfield', search);\n  };\n\n  const navigate = useNavigate();\n\n  //=============================================\n\n  let appState = getAppState();\n\n  const startSearch = async () => {\n    var searchterm = searchfield.trim();\n    if (searchfield.length == 0) {\n      setSearchfield('all');\n      searchterm = 'all';\n    }\n\n    if (searchfield.startsWith('did:yfm:')) {\n      var pubkey = Helper.PubkeyFromDid(searchfield);\n      var person = await getPerson(pubkey);\n      if (JSON.stringify(person).indexOf('error') > 0) {\n        setSearchResult([]);\n        Global.setAppstate('searchResult', JSON.stringify([]));\n      } else {\n        navigate('/show/' + searchfield);\n      }\n      return;\n    }\n\n    Global.setAppstate('searchfield', searchterm);\n    var people = await searchPerson(searchterm);\n    setSearchResult(people);\n    Global.setAppstate('searchResult', JSON.stringify(people));\n    navigate('/search?term=' + searchterm);\n  };\n\n  const linkSelected = (did) => {\n    var linkShowLInk = '/show/' + did;\n    Global.setAppstate('did', did);\n    navigate(linkShowLInk);\n  };\n\n  if (searchResult == null || searchResult.length == 0) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <Container>\n          <Heading>Search</Heading>\n\n          <HStack>\n            <Input\n              placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n              onChange={handleChange}\n              value={searchfield}\n            />\n            <Button onClick={startSearch}>go</Button>\n          </HStack>\n          <br />\n          <Text color=\"teal.500\" fontSize=\"xs\">\n            No records found\n          </Text>\n        </Container>\n      </main>\n    );\n  }\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Search</Heading>\n        <HStack>\n          <Input\n            placeholder=\"Keywords, Username, DID or Tags, blank shows new members\"\n            onChange={handleChange}\n            value={searchfield}\n          />\n          <Button onClick={startSearch}>go</Button>\n        </HStack>\n        <br />\n        <Text color=\"teal.500\" fontSize=\"xs\">\n          found: {searchResult.length}\n        </Text>\n        <Table variant=\"simple\" width=\"100%\" border=\"0\" padding=\"0\" margin=\"0\">\n          {Object.keys(searchResult).map((k, i) => {\n            let d = searchResult[k];\n            return (\n              <Tr key={i}>\n                <Td wdith=\"150px\">\n                  <Link onClick={() => linkSelected(d.did)}>\n                    <Image\n                      boxSize=\"150px\"\n                      objectFit=\"cover\"\n                      src={d.img}\n                      alt={d.username}\n                    />\n                  </Link>\n                </Td>\n                <Td width=\"70%\">\n                  <Table border=\"0\" padding=\"0\" margin=\"0\">\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          <Heading>{d.username}</Heading>\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          {d.jobtitle}\n                        </Link>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        <Link onClick={() => linkSelected(d.did)}>\n                          {d.teaser}\n                        </Link>\n                      </Td>\n                    </Tr>\n                  </Table>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Table>\n      </Container>\n    </main>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (isAuthenticated) {\n    navigate('/search?term=');\n  }\n  return (\n    <Container>\n      <Heading>Welcome to youfoundme</Heading>\n      Please connect your{' '}\n      <Link href=\"https://metamask.io/\" isExternal>\n        Metamask\n      </Link>{' '}\n      wallet\n    </Container>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Text,\n  Button,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n\n  const [isUnique, setIsUnique] = useState(false);\n  const [isReserved, setIsReserved] = useState(false);\n\n  const [verified, SetVerified] = useState(false);\n  const navigate = useNavigate();\n\n  const [creation, setCreation] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [nameOk, setNameOk] = useState('');\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  // const isEmailValid = (val) => {\n  //   let regEmail =\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //   if (!regEmail.test(val)) {\n  //     return false;\n  //   }\n  //   return true;\n  // };\n\n  const check = async () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n      setNameOk('checking...');\n      var person = await getPersonByUserName(username);\n      if (person.length > 0) {\n        setNameError('Username taken');\n        setNameOk('');\n        setIsUnique(false);\n        return;\n      }\n      setNameError('');\n      setNameOk('username available');\n      setIsUnique(true);\n    }\n  };\n\n  const reserve = () => {\n    if (username.length < 2) {\n      setNameError('username minimum 2 letters');\n      setNameOk('');\n      return;\n    } else {\n      setNameError('');\n\n      if (isUnique) {\n        setIsReserved(true);\n        setNameOk('reserved');\n\n        var pubkey = user.get('ethAddress');\n        var did = HELPER.DidFromPubkey(pubkey);\n\n        // Insert into Db\n        var person = {};\n        person.did = did;\n        person.pubkey = pubkey.toLowerCase();\n        person.contract = STATIC.CONTRACT_ADDRESS_FUJI;\n        person.username = username;\n        person.jobtitle = '';\n        person.teaser = '';\n        person.img = '';\n        person.avatar = '';\n        person.tags = '';\n        person.ref0 = '';\n        person.ref1 = '';\n        person.ref2 = '';\n        person.metaverse = '';\n        person.location = '';\n        person.status = '';\n        person.email = '';\n        person.mobile = '';\n        person.gname = '';\n        person.sname = '';\n        person.metafile = '';\n        person.flags = '0';\n        person.created = new Date().toString();\n        person.pin = '';\n        person.magic = '';\n        GLOBAL.updateMePerson(person);\n        navigate('/editor');\n      }\n    }\n  };\n\n  // const sendcode = () => {\n  //   if (!isEmailValid(email)) {\n  //     setCodeError('not a valid email');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('Please check your email');\n  //     const code = (Math.floor(Math.random() * 10000) + 10000)\n  //       .toString()\n  //       .substring(1);\n  //     setCodeexpected(code);\n  //     API.sendVerifyEmail(email.toLocaleLowerCase(), code);\n  //   }\n  // };\n\n  // const verifyCode = () => {\n  //   if (code != codeexpected) {\n  //     setCodeError('code not valid');\n  //     setCodeOk('');\n  //   } else {\n  //     setCodeError('');\n  //     setCodeOk('verified');\n  //     SetVerified(true);\n  //   }\n  // };\n\n  // const moveon = () => {\n  //   if (!verified) {\n  //     return;\n  //   }\n\n  //   setCreation('Creating user...');\n\n  //   // TODO Db insert\n\n  //   // Navigate\n  // };\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Me Editor</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  return (\n    <Container>\n      <Heading>Register</Heading>\n      <Table\n        variant=\"unstyled\"\n        style={{ padding: '0px', margin: '0px' }}\n        className=\"table-tiny\"\n        size=\"sm\"\n        width=\"100%\"\n        cellPadding=\"0\">\n        <Tr>\n          <Td>username</Td>\n          <Td width=\"400px\">\n            <Input\n              width=\"300px\"\n              placeholder=\"user name\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              isDisabled={isReserved}\n            />\n          </Td>\n          <Td width=\"100px\">\n            <HStack>\n              <Button isDisabled={isReserved} onClick={check}>\n                Check availability\n              </Button>\n              <Button isDisabled={!isUnique || isReserved} onClick={reserve}>\n                Reserve\n              </Button>\n            </HStack>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td></Td>\n          <Td>\n            <Text color=\"red.500\">{nameError}</Text>\n            <Text color=\"green.500\">{nameOk}</Text>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td colspan=\"3\">\n            <Text color=\"white.500\">Reserve your username today!</Text>\n            <br />\n            <Text color=\"gray.500\" t>\n              Your username will become permanent, when you create your NFT on\n              the next screen. It is not possible to change the username without\n              creating another NFT with a different wallet address, so choose\n              wisely.\n              <br />\n              <br />\n              Usernames are case sensitive, minimum 2 characters.\n            </Text>\n          </Td>\n        </Tr>\n\n        {/* <Tr>\n          <Td>Email</Td>\n          <Td>\n            <Input\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Td>\n          <Td>\n            <Button onClick={sendcode}>Send code</Button>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td>Code</Td>\n          <Td>\n            <Input\n              placeholder=\"Email Verification code\"\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n            />\n            <br />\n            <Text color=\"red.500\">{codeError}</Text>\n            <Text color=\"green.500\">{codeOk}</Text>\n          </Td>\n          <Td>\n            <Button onClick={verifyCode}>verify</Button>\n          </Td>\n        </Tr>\n\n        <Tr>\n          <Td></Td>\n          <Td colspan=\"2\">\n            <Button onClick={moveon}>Move on</Button>\n            <br /> <br />\n            <Text color=\"green.500\">{creation}</Text>\n          </Td>\n        </Tr> */}\n      </Table>\n    </Container>\n  );\n}\n","/** @format */\nimport Frame, { FrameContextConsumer } from 'react-frame-component';\nimport axios from 'axios';\nimport useMessage from '@rottitime/react-hook-message-event';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  Link as CHAKRALINK,\n  Image,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  CloseButton,\n  useAriaHidden,\n  Checkbox,\n  Td,\n  Tr,\n  Table,\n  Textarea,\n} from '@chakra-ui/react';\n\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport * as Global from '../model/global';\nimport * as IPFS from '../io/ipfs_api';\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\n\n// Avatar https://youfoundme.s3.eu-central-1.amazonaws.com/matd.glb\nexport default function Avatar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [pageLink, setPageLink] = useState('');\n  const [avataruri, setAvataruri] = useState('');\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n\n  const script = document.createElement('script');\n\n  script.src = 'https://use.typekit.net/foobar.js';\n  script.async = true;\n\n  document.body.appendChild(script);\n\n  useEffect(() => {});\n\n  const saveAvatar = async () => {\n    var privKey = await user.get('ethAddress');\n    var uri = document.getElementById('avatarUrl').value;\n    var person = Object.assign({}, Global.getMe());\n    person.avatar = uri;\n    Global.updateMePerson(person);\n    navigate('/editor');\n  };\n\n  return (\n    <center>\n      <Container>\n        <HStack>\n          <Input\n            hidden\n            id=\"avatarUrl\"\n            value={avataruri}\n            onChange={(e) => setAvataruri(e.target.value)}></Input>\n          <Button hidden id=\"btnuse\" onClick={saveAvatar}>\n            Use avatar\n          </Button>\n        </HStack>\n      </Container>\n      <iframe\n        id=\"iframe\"\n        height=\"800\"\n        width=\"1200\"\n        class=\"content\"\n        allow=\"camera *; microphone *\"\n        src=\"https://youfoundme.readyplayer.me/\"></iframe>\n    </center>\n  );\n}\n","/** @format */\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  Heading,\n  Textarea,\n  Text,\n  Button,\n  Container,\n  Image,\n  Link,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n  Input,\n  Table,\n  HStack,\n  VStack,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getPersonByUserName } from '../io/api';\nimport { _toEscapedUtf8String } from 'ethers/lib/utils';\n\nimport * as WEB3 from '../io/web3_api';\nimport * as API from '../io/api';\nimport * as STATIC from '../model/static';\nimport * as HELPER from '../model/helper';\nimport * as GLOBAL from '../model/global';\n\nexport default function Connect() {\n  const [message, setMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [img, setImage] = useState('');\n  const [email, setEmail] = useState('');\n  const [errormsg, setErrormsg] = useState('');\n  const [okmsg, setOkmsg] = useState('');\n\n  var { did } = useParams();\n\n  const {\n    Moralis,\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const send = () => {\n    if (message.length < 2) {\n      setErrormsg('Please add a message');\n      setOkmsg('');\n      return;\n    }\n    setErrormsg('');\n    setOkmsg('Your message has been sent');\n  };\n\n  useEffect(() => {\n    var pubkey = HELPER.PubkeyFromDid(did);\n    var person = GLOBAL.getYou();\n    setUsername(person.username);\n    setImage(person.img);\n    setEmail(person.email);\n    setJobtitle(person.jobtitle);\n  });\n\n  if (user == null) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <center>\n          <Container>\n            <Heading>Conntact</Heading>\n            <br />\n            <Text>\n              Connect your Wallet to sign in.\n              <br />\n              <br />\n              Please use&nbsp;\n              <a href=\"https://metamaski.io\" target=\"_blank\">\n                MetaMask&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>{' '}\n              or&nbsp;\n              <a href=\"https://walletconnect.com/\" target=\"_blank\">\n                Wallet Connect&nbsp;\n                <ExternalLinkIcon\n                  fontSize=\"xs\"\n                  color=\"teal.500\"\n                  style={{ marginBottom: '-1px', marginLeft: '2px' }}\n                />\n              </a>\n              .\n            </Text>\n          </Container>\n        </center>\n      </main>\n    );\n  }\n\n  var placeholder = 'Hi ' + username + ',\\n\\nwould you be interested in.... ';\n  return (\n    <Container>\n      <Heading>{username}</Heading>\n\n      <Image boxSize=\"150\" objectFit=\"cover\" alt={username} src={img}></Image>\n      <Box w=\"10px\" />\n      <Text>{jobtitle}</Text>\n\n      <Box h=\"10px\"></Box>\n      <Textarea\n        h=\"400px\"\n        placeholder={placeholder}\n        onChange={(e) => setMessage(e.target.value)}>\n        {message}\n      </Textarea>\n      <Box h=\"10px\"></Box>\n      <Button onClick={send}>Send message</Button>\n      <Text color=\"red.500\" fontSize=\"xs\">\n        {errormsg}\n      </Text>\n      <Text color=\"green.500\" fontSize=\"xs\">\n        {okmsg}\n      </Text>\n      <Box h=\"10px\" />\n      <Text fontSize=\"xs\" color=\"teal.500\">\n        Get in touch with {username}, we will pass your details on to {username}{' '}\n        and email you back with contact details.\n      </Text>\n    </Container>\n  );\n}\n","/** @format */\n\nimport React from 'react';\nimport App from './App';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { MoralisProvider } from 'react-moralis';\nimport { render, ReactDOM } from 'react-dom';\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom';\n\nimport Show from './routes/show';\nimport Editor from './routes/editor';\nimport Search from './routes/search';\nimport Home from './routes/home';\nimport Register from './routes/register';\nimport Avatar from './routes/avatar';\nimport Connect from './routes/connect';\n\n// import LogRocket from 'logrocket';\n//\nimport * as GLOBAL from './model/global';\nimport * as API from './io/api';\nimport * as STATIC from './model/static';\n\n// LogRocket.init('jyphy1/youfindme');\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'dark',\n  },\n});\n\n// Moralis const\nconst serverUrl = 'https://xhuajeqb4esg.usemoralis.com:2053/server';\nconst appId = 'EKKcMCLp0U2o6l5xCNbuvZmmjCKkyRThrBqzEj9Z';\nconst rootElement = document.getElementById('root');\n\nvar ROOTURL = '';\nif (STATIC.ENV == 'DEV') {\n  ROOTURL = 'http://localhost:3000';\n} else if (STATIC.ENV == 'STAGE') {\n  ROOTURL = 'https://testnet.youfoundme.io';\n} else {\n  ROOTURL = 'https://app.youfoundme.io';\n}\n\nROOTURL = '';\n// Main Render\nrender(\n  <ChakraProvider theme={theme}>\n    <HashRouter basename={ROOTURL}>\n      <MoralisProvider appId={appId} serverUrl={serverUrl}>\n        <Routes>\n          <Route path=\"/\" element={<App />} key={GLOBAL.getAppState().routeky}>\n            <Route\n              path=\"home\"\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              index\n              element={<Home />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"show/:did\"\n              element={<Show />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"editor\"\n              element={<Editor />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"search\"\n              element={<Search />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"register\"\n              element={<Register />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"avatar\"\n              element={<Avatar />}\n              key={GLOBAL.getAppState().routeky}\n            />\n            <Route\n              path=\"connect/:did\"\n              element={<Connect />}\n              key={GLOBAL.getAppState().routeky}\n            />\n          </Route>\n        </Routes>\n      </MoralisProvider>\n    </HashRouter>\n  </ChakraProvider>,\n  rootElement\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}