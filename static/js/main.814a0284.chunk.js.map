{"version":3,"sources":["App.js","io/yfm_api.js","model/global.js","routes/show.jsx","routes/editor.jsx","routes/search.jsx","routes/home.jsx","index.js"],"names":["App","useMoralis","isAuthenticated","isAuthenticating","authenticate","authError","logout","login","user","useState","addr","setAddr","useClipboard","hasCopied","onCopy","useEffect","get","blokexplorerAccount","style","marginTop","left","position","fontSize","borderBottom","paddingBottom","to","right","onClick","isLoading","top","href","isExternal","color","getPerson","pubkey","a","url","axios","res","data","searchPerson","term","postPerson","person","post","then","response","console","log","catch","error","AppState","types","model","searchfield","isConnected","isLoaded","actions","self","set","key","val","Person","did","contract","username","jobtitle","teaser","img","avatar","tags","ref0","ref1","ref2","metaverse","lat","long","status","email","mobile","gname","sname","p","me","create","appState","store","map","getMe","getSnapshot","getAppState","API","updatePerson","Show","navigate","useNavigate","Global","setDid","setPubkey","setContract","setUsername","setJobtitle","setTeaser","setImg","setAvatar","setTags","setRef0","setRef1","setRef2","setMetaverse","setLat","setLong","setStatus","setEmail","setMobile","setGname","setSname","avatarlink","showlink","link","startsWith","substring","length","padding","boxSize","src","objectFit","alt","variant","colSpan","onSnapshot","snapshot","dir","Editor","handleSave","e","toLowerCase","placeholder","value","onChange","target","Search","searchResult","setSearchResult","setSearchfield","startSearch","handleDefault","search","Object","keys","k","i","d","Home","LogRocket","init","theme","extendTheme","config","initialColorMode","rootElement","document","getElementById","render","appId","serverUrl","path","element","index"],"mappings":"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","file":"static/js/main.814a0284.chunk.js","sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { useMoralis } from 'react-moralis';\nimport {\n  Link as LINKCH,\n  HStack,\n  Button,\n  Text,\n  Heading,\n  useClipboard,\n} from '@chakra-ui/react';\nimport { CopyIcon, ExternalLinkIcon } from '@chakra-ui/icons';\n\nexport default function App() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const [addr, setAddr] = useState('');\n  const { hasCopied, onCopy } = useClipboard(addr);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      setAddr(user.get('ethAddress'));\n    }\n  });\n\n  var blokexplorerAccount = 'https://testnet.snowtrace.io/address/' + addr;\n\n  return (\n    <div style={{ marginTop: 'px' }}>\n      <span style={{ left: '10px', position: 'absolute' }}>\n        <Heading fontSize=\"3xl\">youfoundme.io</Heading>\n      </span>\n      <center>\n        <nav style={{ borderBottom: 'solid 1px', paddingBottom: '1rem' }}>\n          <Link to=\"/show\">\n            <Button>My DID</Button>\n          </Link>\n          &nbsp;\n          <Link to=\"/editor\">\n            <Button>Edit DID</Button>\n          </Link>\n          &nbsp;\n          <Link to=\"/search\">\n            <Button>Search</Button>\n          </Link>\n          &nbsp;&nbsp;&nbsp;\n          <span style={{ right: '10px', position: 'absolute' }}>\n            {isAuthenticated ? (\n              <Button onClick={() => logout()}>disconnet</Button>\n            ) : (\n              <Button\n                isLoading={isAuthenticating}\n                onClick={() => authenticate()}>\n                connect wallet\n              </Button>\n            )}\n          </span>\n          {isAuthenticated && (\n            <span style={{ top: '40px', right: '10px', position: 'absolute' }}>\n              <LINKCH href={blokexplorerAccount} isExternal>\n                <HStack>\n                  <ExternalLinkIcon fontSize=\"xs\" />\n                  <Text fontSize=\"xs\">{addr}</Text>\n                </HStack>\n              </LINKCH>\n            </span>\n          )}\n          <span style={{ top: '60px', right: '10px', position: 'absolute' }}>\n            <HStack>\n              <ExternalLinkIcon color=\"blue.500\" />\n              <Text fontSize=\"xs\">\n                <LINKCH\n                  color=\"blue.500\"\n                  href=\"https://testnet.snowtrace.io/block/0x3b9197c2e27818ab344d1c567917e8c569850b5901926f1e777c0e505547a84e\"\n                  isExternal>\n                  Contract Fuji\n                </LINKCH>\n              </Text>\n            </HStack>\n          </span>\n        </nav>\n        <Outlet />\n      </center>\n    </div>\n  );\n}\n","/** @format */\n\nimport axios from 'axios';\n\n// https://api.tech41.de/yfm/v0/person/get/0x345879B60BF5ccDDd06BC91E49A6eBc4e93CfDAa\n\nexport async function getPerson(pubkey) {\n  const GETPERSONURL = 'https://api.tech41.de/yfm/v0/person/get/';\n  const url = GETPERSONURL + pubkey;\n  let res = await axios.get(url);\n  return res.data;\n}\n\nexport async function searchPerson(term) {\n  const GETPERSONURL = 'https://api.tech41.de/yfm/v0/person/search/';\n  const url = GETPERSONURL + term;\n  let res = await axios.get(url);\n  return res.data;\n}\n\nexport async function postPerson(person) {\n  const POSTPERSONURL = 'https://api.tech41.de/yfm/v0/person/post/';\n  axios\n    .post(POSTPERSONURL, {\n      person: person,\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n","/** @format */\n\nimport { types, getSnapshot, onSnapshot } from 'mobx-state-tree';\nimport * as API from '../io/yfm_api.js';\n\nconst AppState = types\n  .model({\n    searchfield: '',\n    isConnected: false,\n    isLoaded: false,\n  })\n  .actions((self) => ({\n    set(key, val) {\n      switch (key) {\n        case 'searchfield':\n          self.searchfield = val;\n\n        case 'isConnected':\n          self.isConnected = val;\n\n        case 'isLoaded':\n          self.isLoaded = val;\n      }\n    },\n  }));\n\nconst Person = types\n  .model({\n    did: '',\n    pubkey: '',\n    contract: '',\n    username: '',\n    jobtitle: '',\n    teaser: '',\n    img: '',\n    avatar: '',\n    tags: '',\n    ref0: '',\n    ref1: '',\n    ref2: '',\n    metaverse: '',\n    lat: '',\n    long: '',\n    status: '',\n    email: '',\n    mobile: '',\n    gname: '',\n    sname: '',\n  })\n  .actions((self) => ({\n    set(p) {\n      self.did = p.did;\n      self.pubkey = p.pubkey;\n      self.contract = p.contract;\n      self.username = p.username;\n      self.jobtitle = p.jobtitle;\n      self.avatar = p.avatar;\n      self.teaser = p.teaser;\n      self.img = p.img;\n      self.tags = p.tags;\n      self.ref0 = p.ref0;\n      self.ref1 = p.ref1;\n      self.ref2 = p.ref2;\n      self.metaverse = p.metaverse;\n      self.lat = p.lat;\n      self.long = p.long;\n      self.status = p.status;\n      self.email = p.email;\n      self.mobile = p.mobile;\n      self.gname = p.gname;\n      self.sname = p.sname;\n    },\n  }));\n\nconst me = Person.create();\nconst appState = AppState.create();\n\nconst RootStore = types.model({\n  me: types.map(Person),\n  appState: types.map(AppState),\n});\n\n// create an instance from a snapshot\nconst store = RootStore.create({});\n\n// listen to new snapshots\nonSnapshot(store, (snapshot) => {\n  console.dir(snapshot);\n});\n\nexport function getMe() {\n  return getSnapshot(me);\n}\n\nexport function getAppState() {\n  return getSnapshot(appState);\n}\n\nexport async function loadPersonByPubKey(pubkey) {\n  var p = await API.getPerson(pubkey);\n  me.set(p.person);\n}\n\nexport async function setAppstate(key, val) {\n  appState.set(key, val);\n  return appState;\n}\n\nexport async function updatePerson(person) {\n  me.set(person);\n  API.postPerson(person);\n  return me;\n}\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  ExternalLinkIcon,\n  StarIcon,\n  PhoneIcon,\n  EmailIcon,\n  TimeIcon,\n  DownloadIcon,\n  InfoOutlineIcon,\n  ViewIcon,\n  CopyIcon,\n} from '@chakra-ui/icons';\nimport {\n  HStack,\n  useClipboard,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text,\n  Image,\n  Heading,\n  Container,\n  Link,\n  Button,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport * as YFM_Api from '../io/yfm_api.js';\nimport * as Person from '../model/global.js';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport * as Global from '../model/global';\n\nexport default function Show() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (!isAuthenticated) {\n    navigate('/home');\n  }\n  var appState = Global.getAppState();\n  if (!appState.isLoaded) {\n    Global.loadPersonByPubKey(user.get('ethAddress'));\n    Global.setAppstate('isLoaded', true);\n  }\n\n  useEffect(() => {\n    let person = Person.getMe();\n    setDid(person.did);\n    setPubkey(person.pubkey);\n    setContract(person.contract);\n    setUsername(person.username);\n    setJobtitle(person.jobtitle);\n    setTeaser(person.teaser);\n    setImg(person.img);\n    setAvatar(person.avatar);\n    setTags(person.tags);\n    setRef0(person.ref0);\n    setRef1(person.ref1);\n    setRef2(person.ref2);\n    setMetaverse(person.metaverse);\n    setLat(person.lat);\n    setLong(person.long);\n    setStatus(person.status);\n    setEmail(person.email);\n    setMobile(person.mobile);\n    setGname(person.gname);\n    setSname(person.sname);\n  });\n\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [lat, setLat] = useState('');\n  const [long, setLong] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [sname, setSname] = useState('');\n\n  var avatarlink = 'avatar.html?url=' + avatar;\n\n  const showlink = (link) => {\n    if (link.startsWith('https')) {\n      link = link.substring(8);\n    }\n    if (link.startsWith('http')) {\n      link = link.substring(7);\n    }\n    if (link.length > 50) {\n      link = link.substring(0, 50) + '...';\n    }\n    return link;\n  };\n\n  const { hasCopied, onCopy } = useClipboard(did);\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        {/* {isAuthenticated && (\n          <Text fontSize=\"sm\">METAMASK connected {user.get('ethAddress')}</Text>\n        )}\n        {!isAuthenticated && (\n          <Text fontSize=\"sm\">disconnected - please sign in with METAMASK</Text>\n        )} */}\n        <Link onClick={onCopy}>\n          <HStack>\n            <Text fontSize=\"sm\">{did}</Text>\n            <CopyIcon />\n          </HStack>\n        </Link>\n        {/* <Button onClick={onCopy} ml={2}>\n          {hasCopied ? 'Copied' : 'Copy'}\n        </Button> */}\n\n        <br />\n        <Heading>{username}</Heading>\n        <br />\n        {img.length > 0 && (\n          <Image boxSize=\"200px\" src={img} objectFit=\"cover\" alt={username} />\n        )}\n        {avatar.length > 0 && (\n          <Link color=\"teal.500\" href={avatarlink} isExternal>\n            Show Avatar\n          </Link>\n        )}\n        <br />\n        <Heading>{jobtitle}</Heading>\n        <Text fontSize=\"1xl\">{teaser}</Text>\n        <br />\n        <Table variant=\"simple\">\n          <Tr>\n            <Td>\n              <Link href={ref0} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={ref0} isExternal>\n                <Text fontSize=\"1xl\">{showlink(ref0)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={ref1} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={ref1} isExternal>\n                <Text fontSize=\"1xl\">{showlink(ref1)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <Link href={ref2} isExternal>\n                <ExternalLinkIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={ref2} isExternal>\n                <Text fontSize=\"1xl\">{showlink(ref2)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n\n          <Tr>\n            <Td>\n              <Link href={metaverse} isExternal>\n                <ViewIcon color=\"blue.500\" />\n              </Link>\n            </Td>\n            <Td>\n              <Link href={metaverse} isExternal>\n                <Text fontSize=\"1xl\">{showlink(metaverse)}</Text>\n              </Link>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <TimeIcon color=\"blue.500\" />{' '}\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\">{status}</Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td colSpan=\"2\">\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                + details, only visible to contacts confirmed by you\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <InfoOutlineIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {gname} {sname}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <EmailIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {email}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <PhoneIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text fontSize=\"1xl\" color=\"teal.500\">\n                {mobile}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <StarIcon color=\"blue.500\" />\n            </Td>\n            <Td>\n              <Text color=\"teal.500\" fontSize=\"1xl\">\n                {tags}\n              </Text>\n            </Td>\n          </Tr>\n          <Tr>\n            <Td>\n              <DownloadIcon color=\"blue.500\" />\n            </Td>\n            <Td>VCF card | VCF card+</Td>\n          </Tr>\n        </Table>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Text,\n  Button,\n  HStack,\n  Input,\n  Heading,\n  Container,\n  AlertIcon,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport * as Global from '../model/global';\nimport { createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\n\nexport default function Editor() {\n  // Authentication =============================\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (!isAuthenticated) {\n    navigate('/home');\n  }\n  //=============================================\n\n  useEffect(() => {\n    if (did == '') {\n      let person = Global.getMe();\n      setDid(person.did);\n      setPubkey(person.pubkey);\n      setContract(person.contract);\n      setUsername(person.username);\n      setJobtitle(person.jobtitle);\n      setTeaser(person.teaser);\n      setImg(person.img);\n      setAvatar(person.avatar);\n      setTags(person.tags);\n      setRef0(person.ref0);\n      setRef1(person.ref1);\n      setRef2(person.ref2);\n      setMetaverse(person.metaverse);\n      setLat(person.lat);\n      setLong(person.long);\n      setStatus(person.status);\n      setEmail(person.email);\n      setMobile(person.mobile);\n      setGname(person.gname);\n      setSname(person.sname);\n    }\n  });\n\n  const handleSave = async (e) => {\n    var person = {};\n    person.did = did;\n    person.pubkey = pubkey.toLowerCase();\n    person.contract = contract.toLowerCase();\n    person.username = username;\n    person.jobtitle = jobtitle;\n    person.teaser = teaser;\n    person.img = img;\n    person.avatar = avatar;\n    person.tags = tags;\n    person.ref0 = ref0;\n    person.ref1 = ref1;\n    person.ref2 = ref2;\n    person.metaverse = metaverse;\n    person.lat = lat;\n    person.long = long;\n    person.status = status;\n    person.email = email;\n    person.mobile = mobile;\n    person.gname = gname;\n    person.sname = sname;\n    Global.updatePerson(person);\n  };\n\n  const [did, setDid] = useState('');\n  const [pubkey, setPubkey] = useState('');\n  const [contract, setContract] = useState('');\n  const [username, setUsername] = useState('');\n  const [jobtitle, setJobtitle] = useState('');\n  const [teaser, setTeaser] = useState('');\n  const [img, setImg] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [tags, setTags] = useState('');\n  const [ref0, setRef0] = useState('');\n  const [ref1, setRef1] = useState('');\n  const [ref2, setRef2] = useState('');\n  const [metaverse, setMetaverse] = useState('');\n  const [lat, setLat] = useState('');\n  const [long, setLong] = useState('');\n  const [status, setStatus] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [gname, setGname] = useState('');\n  const [sname, setSname] = useState('');\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Profile Editor</Heading>\n        <br />\n\n        <HStack>\n          <Text>DID: </Text>\n          <Text fontSize=\"sm\">{did}</Text>\n        </HStack>\n        <HStack>\n          <Text>Your public key: </Text>\n          <Text fontSize=\"sm\">{pubkey} </Text>\n        </HStack>\n        <HStack>\n          <Text>contract: </Text>\n          <Text fontSize=\"sm\">{contract} - Avalanche FUJI</Text>\n        </HStack>\n\n        <Button onClick={handleSave}>Save</Button>\n        <Heading>Public</Heading>\n        <HStack>\n          <Text>username: </Text>\n          <Input\n            placeholder=\"username\"\n            fontSize=\"1xl\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>jobtitle: </Text>\n          <Input\n            placeholder=\"jobtitle\"\n            fontSize=\"1xl\"\n            value={jobtitle}\n            onChange={(e) => setJobtitle(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>teaser: </Text>\n          <Input\n            placeholder=\"teaser\"\n            fontSize=\"1xl\"\n            value={teaser}\n            onChange={(e) => setTeaser(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>img: </Text>\n          <Input\n            placeholder=\"img\"\n            fontSize=\"1xl\"\n            value={img}\n            onChange={(e) => setImg(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>avatar: </Text>\n          <Input\n            placeholder=\"avatar\"\n            fontSize=\"1xl\"\n            value={avatar}\n            onChange={(e) => setAvatar(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>tags: </Text>\n          <Input\n            placeholder=\"tags\"\n            fontSize=\"1xl\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n          />\n        </HStack>\n\n        <HStack>\n          <Text>ref0: </Text>\n          <Input\n            placeholder=\"ref0\"\n            fontSize=\"1xl\"\n            value={ref0}\n            onChange={(e) => setRef0(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>ref1: </Text>\n          <Input\n            placeholder=\"ref1 \"\n            fontSize=\"1xl\"\n            value={ref1}\n            onChange={(e) => setRef1(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>ref2: </Text>\n          <Input\n            placeholder=\"ref2 \"\n            fontSize=\"1xl\"\n            value={ref2}\n            onChange={(e) => setRef2(e.target.value)}\n          />\n        </HStack>\n\n        <Heading>Status</Heading>\n        <HStack>\n          <Text>metaverse: </Text>\n          <Input\n            placeholder=\"metaverse\"\n            fontSize=\"1xl\"\n            value={metaverse}\n            onChange={(e) => setMetaverse(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>lat: </Text>\n          <Input\n            placeholder=\"lattidtude\"\n            fontSize=\"1xl\"\n            value={lat}\n            onChange={(e) => setLat(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>long: </Text>\n          <Input\n            placeholder=\"longitude\"\n            fontSize=\"1xl\"\n            value={long}\n            onChange={(e) => setLong(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>status: </Text>\n          <Input\n            placeholder=\"status\"\n            fontSize=\"1xl\"\n            value={status}\n            onChange={(e) => setStatus(e.target.value)}\n          />\n        </HStack>\n\n        <Heading>Private</Heading>\n        <HStack>\n          <Text>email: </Text>\n          <Input\n            placeholder=\"email\"\n            fontSize=\"1xl\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>mobile: </Text>\n          <Input\n            placeholder=\"mobile\"\n            fontSize=\"1xl\"\n            value={mobile}\n            onChange={(e) => setMobile(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>gname: </Text>\n          <Input\n            placeholder=\"first name\"\n            fontSize=\"1xl\"\n            value={gname}\n            onChange={(e) => setGname(e.target.value)}\n          />\n        </HStack>\n        <HStack>\n          <Text>sname: </Text>\n          <Input\n            placeholder=\"last name\"\n            fontSize=\"1xl\"\n            value={sname}\n            onChange={(e) => setSname(e.target.value)}\n          />\n        </HStack>\n      </Container>\n    </main>\n  );\n}\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Heading,\n  Input,\n  Container,\n  Text,\n  Button,\n  HStack,\n  Link,\n  Table,\n  Tr,\n  Td,\n} from '@chakra-ui/react';\n\nimport { getAppState, loadPersonByPubKey, setAppstate } from '../model/global';\n\nimport { searchPerson } from '../io/yfm_api';\n\nimport { useMoralis } from 'react-moralis';\n\nconst Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n\n  useEffect(() => {});\n\n  // Authentication =============================\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (!isAuthenticated) {\n    navigate('/home');\n  }\n  //=============================================\n\n  let appState = getAppState();\n\n  const handleChange = (e) => {\n    var search = e.target.value;\n    setSearchfield(search);\n  };\n\n  const startSearch = async () => {\n    var p = await searchPerson(searchfield);\n    setSearchResult(p);\n    //await loadPersonByPubKey(appState.searchfield);\n    //navigate('/show');\n  };\n\n  const handleDefault = async (e) => {\n    setSearchfield('0x345879b60bf5ccddd06bc91e49a6ebc4e93cfdaa');\n    navigate('/search');\n  };\n\n  const selectPerson = (did) => {\n    navigate('/show');\n  };\n\n  const data = [\n    { did: 'did:nft:0', username: 'some' },\n    { did: 'did:nft:1', username: 'another' },\n    { did: 'did:nft:2', username: 'another' },\n    { did: 'did:nft:3', username: 'another' },\n    { did: 'did:nft:4', username: 'another' },\n    { did: 'did:nft:5', username: 'another' },\n    { did: 'did:nft:6', username: 'another' },\n  ];\n\n  return (\n    <main style={{ padding: '1rem 0' }}>\n      <Container>\n        <Heading>Search</Heading>\n        <HStack>\n          <Input onChange={handleChange} value={searchfield} />\n          <Button onClick={startSearch}>go</Button>\n          <Button onClick={handleDefault}>default</Button>\n        </HStack>\n        <Text fontSize=\"xs\">name or DID</Text>\n        <br /> <br />\n        <Table>\n          {Object.keys(searchResult).map((k, i) => {\n            let d = searchResult[k];\n            return (\n              <Tr key={i} onClick={() => selectPerson(d.did)}>\n                <Td>{d.did}</Td>\n                <Td>{d.username}</Td>\n              </Tr>\n            );\n          })}\n        </Table>\n      </Container>\n    </main>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Heading,\n  Text,\n  Image,\n  Container,\n  Link,\n  HStack,\n  Box,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from '@chakra-ui/react';\nimport { useMoralis } from 'react-moralis';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authError,\n    authenticate,\n    login,\n    logout,\n    user,\n  } = useMoralis();\n\n  const navigate = useNavigate();\n  if (isAuthenticated) {\n    navigate('/show');\n  }\n  return (\n    <Container>\n      <Heading>Welcome to youfoundme</Heading>\n      Please connect your{' '}\n      <Link href=\"https://metamask.io/\" isExternal>\n        Metamask\n      </Link>{' '}\n      wallet\n    </Container>\n  );\n}\n","import React from 'react';\nimport App from './App';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react'\nimport { MoralisProvider } from \"react-moralis\";\nimport { render,ReactDOM } from \"react-dom\";\nimport {BrowserRouter,Routes,Route,Navigate} from \"react-router-dom\";\n\nimport Show from \"./routes/show\";\nimport Editor from \"./routes/editor\";\nimport Search from \"./routes/search\";\nimport Home from \"./routes/home\";\n\nimport LogRocket from 'logrocket';\n\nLogRocket.init('jyphy1/youfindme')\n\nconst theme = extendTheme({\n  config:{\n    initialColorMode:\"dark\"\n  }\n})\n\n// Moralis const\nconst serverUrl = \"https://xhuajeqb4esg.usemoralis.com:2053/server\";\nconst appId = \"EKKcMCLp0U2o6l5xCNbuvZmmjCKkyRThrBqzEj9Z\";\nconst rootElement = document.getElementById(\"root\");\n\n// Main Render\nrender(\n    \n      <ChakraProvider theme={theme}>\n        <BrowserRouter>\n        <MoralisProvider appId={appId} serverUrl={serverUrl}> \n            <Routes>\n              <Route path=\"/\" element={<App />} >\n                <Route path=\"home\" element={<Home />} />\n                <Route index element={<Home />} />\n                <Route path=\"show\" element={<Show />} />\n                <Route path=\"editor\" element={<Editor />} /> \n                <Route path=\"search\" element={<Search />} /> \n              </Route>\n          </Routes>\n          </MoralisProvider>\n        </BrowserRouter>\n      </ChakraProvider>,\n  rootElement\n);\n\n\n//reportWebVitals();\n"],"sourceRoot":""}